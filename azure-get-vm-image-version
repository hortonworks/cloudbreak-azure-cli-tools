#!/bin/bash

: ${AZURE_IMAGE_PUBLISHER?= required}
: ${AZURE_IMAGE_OFFER?= required}
: ${AZURE_IMAGE_SKU?= required}

LOG_FILE=azure_get_vm_image_version.log

log() {
  MESSAGE=$1
  echo "$(date '+%d/%m/%Y %H:%M:%S') - $MESSAGE " >> $LOG_FILE
}

debug() {
  [[ "$DEBUG" ]] && echo "-----> $*" 1>&2
}

alias r="source $BASH_SOURCE"

azure_login() {
  if [[ "$ARM_CLIENT_ID" ]] && [[ "$ARM_CLIENT_SECRET" ]]; then
    az login --username $ARM_CLIENT_ID --password $ARM_CLIENT_SECRET --service-principal --tenant $ARM_TENANT_ID
  fi
}

azure_get_vm_image_version() {
  log "Lookup VM image by publisher=$AZURE_IMAGE_PUBLISHER offer=$AZURE_IMAGE_OFFER and sku=$AZURE_IMAGE_SKU"

  URN=$(az vm image list --publisher $AZURE_IMAGE_PUBLISHER --offer $AZURE_IMAGE_OFFER --sku $AZURE_IMAGE_SKU --all | jq -r --arg sku $AZURE_IMAGE_SKU '.[] | select(.sku == $sku) | .urn')
  log "VM image URN from Azure: $URN"

  VERSION=$(echo $URN | cut -d ":" -f 4)
  log "VM image version: $VERSION"

  if [ -z $VERSION ]; then
    echo "Failed to get vm image version!" 1>&2
    exit 1
  fi
  echo $VERSION
}

main() {
  : ${DEBUG:=1}
  azure_login
  azure_get_vm_image_version > azure_get_vm_image_version.out
}

[[ "$0" == "$BASH_SOURCE" ]] && main "$@"